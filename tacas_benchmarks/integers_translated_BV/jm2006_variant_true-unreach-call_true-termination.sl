(set-logic ALL)
(declare-var i (_ BitVec 32))
(declare-var j (_ BitVec 32))
(declare-var x (_ BitVec 32))
(declare-var y (_ BitVec 32))
(declare-var z (_ BitVec 32))
(declare-var i! (_ BitVec 32))
(declare-var j! (_ BitVec 32))
(declare-var x! (_ BitVec 32))
(declare-var y! (_ BitVec 32))
(declare-var z! (_ BitVec 32))
(synth-fun inv-f((parameter0 (_ BitVec 32))(parameter1 (_ BitVec 32))(parameter2 (_ BitVec 32))(parameter3 (_ BitVec 32))(parameter4 (_ BitVec 32)))Bool) 
(constraint (=> (and (and (and (and (bvuge i (_ bv0 32)) (bvuge j (_ bv0 32)) ) (= z (_ bv0 32)) ) (= x i) ) (= y j) )(inv-f i j x y z )))
(constraint (=> (and (inv-f i j x y z ) (and (and (and (and (and (not (= x (_ bv0 32))) (= i! i) ) (= j! j) ) (= x! (bvsub x (_ bv1 32))) ) (= y! (bvsub y (_ bv2 32))) ) (= z! (bvadd z (_ bv1 32))) ) )(inv-f i! j! x! y! z! )))
(constraint (=> (inv-f i j x y z )(or (not (= x (_ bv0 32))) (=> (= i j)(= y (bvsub (_ bv0 32) z))) )))
(check-synth)

