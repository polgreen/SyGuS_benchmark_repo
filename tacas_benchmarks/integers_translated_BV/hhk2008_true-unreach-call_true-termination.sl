(set-logic ALL)
(declare-var a (_ BitVec 32))
(declare-var b (_ BitVec 32))
(declare-var res (_ BitVec 32))
(declare-var cnt (_ BitVec 32))
(declare-var a! (_ BitVec 32))
(declare-var b! (_ BitVec 32))
(declare-var res! (_ BitVec 32))
(declare-var cnt! (_ BitVec 32))
(synth-fun inv-f((parameter0 (_ BitVec 32))(parameter1 (_ BitVec 32))(parameter2 (_ BitVec 32))(parameter3 (_ BitVec 32)))Bool) 
(constraint (=> (and (and (and (and (bvule a (_ bv1000000 32)) (bvule (_ bv0 32) b) ) (bvule b (_ bv1000000 32)) ) (= res a) ) (= cnt b) )(inv-f a b res cnt )))
(constraint (=> (and (inv-f a b res cnt ) (and (and (and (and (bvugt cnt (_ bv0 32)) (= cnt! (bvsub cnt (_ bv1 32))) ) (= res! (bvadd res (_ bv1 32))) ) (= a! a) ) (= b! b) ) )(inv-f a! b! res! cnt! )))
(constraint (=> (inv-f a b res cnt )(or (bvugt cnt (_ bv0 32)) (= res (bvadd a b)) )))
(check-synth)

