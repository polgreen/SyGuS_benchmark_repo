(set-logic ALL)
(declare-var a (_ BitVec 32))
(declare-var a! (_ BitVec 32))
(declare-var c (_ BitVec 32))
(declare-var c! (_ BitVec 32))
(declare-var j (_ BitVec 32))
(declare-var j! (_ BitVec 32))
(declare-var conf_0 (_ BitVec 32))
(declare-var conf_0! (_ BitVec 32))
(declare-var conf_1 (_ BitVec 32))
(declare-var conf_1! (_ BitVec 32))
(declare-var conf_2 (_ BitVec 32))
(declare-var conf_2! (_ BitVec 32))
(declare-var conf_3 (_ BitVec 32))
(declare-var conf_3! (_ BitVec 32))
(declare-var conf_4 (_ BitVec 32))
(declare-var conf_4! (_ BitVec 32))
(declare-var k (_ BitVec 32))
(declare-var k! (_ BitVec 32))
(declare-var m (_ BitVec 32))
(declare-var m! (_ BitVec 32))
(declare-var a_0 (_ BitVec 32))
(declare-var a_0! (_ BitVec 32))
(declare-var c_0 (_ BitVec 32))
(declare-var c_0! (_ BitVec 32))
(declare-var j_0 (_ BitVec 32))
(declare-var j_0! (_ BitVec 32))
(declare-var j_1 (_ BitVec 32))
(declare-var j_1! (_ BitVec 32))
(declare-var conf_0_0 (_ BitVec 32))
(declare-var conf_0_0! (_ BitVec 32))
(declare-var conf_1_0 (_ BitVec 32))
(declare-var conf_1_0! (_ BitVec 32))
(declare-var conf_1_1 (_ BitVec 32))
(declare-var conf_1_1! (_ BitVec 32))
(declare-var conf_1_2 (_ BitVec 32))
(declare-var conf_1_2! (_ BitVec 32))
(declare-var conf_1_3 (_ BitVec 32))
(declare-var conf_1_3! (_ BitVec 32))
(declare-var conf_2_0 (_ BitVec 32))
(declare-var conf_2_0! (_ BitVec 32))
(declare-var conf_3_0 (_ BitVec 32))
(declare-var conf_3_0! (_ BitVec 32))
(declare-var conf_4_0 (_ BitVec 32))
(declare-var conf_4_0! (_ BitVec 32))
(declare-var conf_4_1 (_ BitVec 32))
(declare-var conf_4_1! (_ BitVec 32))
(declare-var conf_4_2 (_ BitVec 32))
(declare-var conf_4_2! (_ BitVec 32))
(declare-var k_0 (_ BitVec 32))
(declare-var k_0! (_ BitVec 32))
(declare-var k_1 (_ BitVec 32))
(declare-var k_1! (_ BitVec 32))
(declare-var k_2 (_ BitVec 32))
(declare-var k_2! (_ BitVec 32))
(declare-var k_3 (_ BitVec 32))
(declare-var k_3! (_ BitVec 32))
(declare-var m_0 (_ BitVec 32))
(declare-var m_0! (_ BitVec 32))
(declare-var m_1 (_ BitVec 32))
(declare-var m_1! (_ BitVec 32))
(declare-var m_2 (_ BitVec 32))
(declare-var m_2! (_ BitVec 32))
(declare-var m_3 (_ BitVec 32))
(declare-var m_3! (_ BitVec 32))
(synth-fun inv-f((parameter0 (_ BitVec 32))(parameter1 (_ BitVec 32))(parameter2 (_ BitVec 32))(parameter3 (_ BitVec 32))(parameter4 (_ BitVec 32))(parameter5 (_ BitVec 32))(parameter6 (_ BitVec 32))(parameter7 (_ BitVec 32))(parameter8 (_ BitVec 32))(parameter9 (_ BitVec 32))(parameter10 (_ BitVec 32))(parameter11 (_ BitVec 32))(parameter12 (_ BitVec 32))(parameter13 (_ BitVec 32))(parameter14 (_ BitVec 32))(parameter15 (_ BitVec 32))(parameter16 (_ BitVec 32))(parameter17 (_ BitVec 32))(parameter18 (_ BitVec 32))(parameter19 (_ BitVec 32))(parameter20 (_ BitVec 32))(parameter21 (_ BitVec 32))(parameter22 (_ BitVec 32))(parameter23 (_ BitVec 32))(parameter24 (_ BitVec 32))(parameter25 (_ BitVec 32))(parameter26 (_ BitVec 32))(parameter27 (_ BitVec 32))(parameter28 (_ BitVec 32))(parameter29 (_ BitVec 32))(parameter30 (_ BitVec 32))(parameter31 (_ BitVec 32)))Bool) 
(constraint (=> (and (and (and (and (and (and (and (and (and (and (and (and (and (= j j_1) (= conf_0 conf_0_0) ) (= conf_1 conf_1_0) ) (= conf_2 conf_2_0) ) (= conf_3 conf_3_0) ) (= conf_4 conf_4_0) ) (= k k_1) ) (= conf_0_0 (_ bv1 32)) ) (= conf_1_0 (_ bv1 32)) ) (= conf_2_0 (_ bv2 32)) ) (= conf_3_0 (_ bv0 32)) ) (= conf_4_0 (_ bv7 32)) ) (= j_1 (_ bv0 32)) ) (= k_1 (_ bv0 32)) )(inv-f a c j conf_0 conf_1 conf_2 conf_3 conf_4 k m a_0 c_0 j_0 j_1 conf_0_0 conf_1_0 conf_1_1 conf_1_2 conf_1_3 conf_2_0 conf_3_0 conf_4_0 conf_4_1 conf_4_2 k_0 k_1 k_2 k_3 m_0 m_1 m_2 m_3 )))
(constraint (=> (and (inv-f a c j conf_0 conf_1 conf_2 conf_3 conf_4 k m a_0 c_0 j_0 j_1 conf_0_0 conf_1_0 conf_1_1 conf_1_2 conf_1_3 conf_2_0 conf_3_0 conf_4_0 conf_4_1 conf_4_2 k_0 k_1 k_2 k_3 m_0 m_1 m_2 m_3 ) (or (or (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= conf_1_1 conf_1) (= conf_4_1 conf_4) ) (= k_2 k) ) (= m_1 m) ) (= conf_1_1 conf_1!) ) (= conf_4_1 conf_4!) ) (= k_2 k!) ) (= m_1 m!) ) (= c c_0) ) (= c! c_0) ) (= a a!) ) (= j j!) ) (= conf_0 conf_0!) ) (= conf_1 conf_1!) ) (= conf_2 conf_2!) ) (= conf_3 conf_3!) ) (= conf_4 conf_4!) ) (= m m!) ) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= conf_1_1 conf_1) (= conf_4_1 conf_4) ) (= k_2 k) ) (= m_1 m) ) (bvult k_2 c_0) ) (bvult m_1 a_0) ) (= m_2 a_0) ) (= conf_1_2 (bvsub conf_1_1 (_ bv345 32))) ) (= conf_1_3 conf_1_2) ) (= m_3 m_2) ) (= k_3 (bvadd k_2 (_ bv1 32))) ) (= conf_4_2 conf_3_0) ) (= conf_1_3 conf_1!) ) (= conf_4_2 conf_4!) ) (= k_3 k!) ) (= m_3 m!) ) (= a a_0) ) (= a! a_0) ) (= c c_0) ) (= c! c_0) ) (= j j_1) ) (= j! j_1) ) (= conf_0 conf_0_0) ) (= conf_0! conf_0_0) ) (= conf_2 conf_2_0) ) (= conf_2! conf_2_0) ) (= conf_3 conf_3_0) ) (= conf_3! conf_3_0) ) ) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= conf_1_1 conf_1) (= conf_4_1 conf_4) ) (= k_2 k) ) (= m_1 m) ) (bvult k_2 c_0) ) (not (bvult m_1 a_0)) ) (= conf_1_3 conf_1_1) ) (= m_3 m_1) ) (= k_3 (bvadd k_2 (_ bv1 32))) ) (= conf_4_2 conf_3_0) ) (= conf_1_3 conf_1!) ) (= conf_4_2 conf_4!) ) (= k_3 k!) ) (= m_3 m!) ) (= a a_0) ) (= a! a_0) ) (= c c_0) ) (= c! c_0) ) (= j j_1) ) (= j! j_1) ) (= conf_0 conf_0_0) ) (= conf_0! conf_0_0) ) (= conf_2 conf_2_0) ) (= conf_2! conf_2_0) ) (= conf_3 conf_3_0) ) (= conf_3! conf_3_0) ) ) )(inv-f a! c! j! conf_0! conf_1! conf_2! conf_3! conf_4! k! m! a_0! c_0! j_0! j_1! conf_0_0! conf_1_0! conf_1_1! conf_1_2! conf_1_3! conf_2_0! conf_3_0! conf_4_0! conf_4_1! conf_4_2! k_0! k_1! k_2! k_3! m_0! m_1! m_2! m_3! )))
(constraint (=> (inv-f a c j conf_0 conf_1 conf_2 conf_3 conf_4 k m a_0 c_0 j_0 j_1 conf_0_0 conf_1_0 conf_1_1 conf_1_2 conf_1_3 conf_2_0 conf_3_0 conf_4_0 conf_4_1 conf_4_2 k_0 k_1 k_2 k_3 m_0 m_1 m_2 m_3 )(or (not (and (and (and (and (and (and (and (and (and (= a a_0) (= c c_0) ) (= j j_1) ) (= conf_0 conf_0_0) ) (= conf_1 conf_1_1) ) (= conf_2 conf_2_0) ) (= conf_3 conf_3_0) ) (= conf_4 conf_4_1) ) (= k k_2) ) (= m m_1) )) (not (and (and (not (bvult k_2 c_0)) (bvugt c_0 (_ bv0 32)) ) (not (bvule a_0 m_1)) )) )))
(check-synth)

