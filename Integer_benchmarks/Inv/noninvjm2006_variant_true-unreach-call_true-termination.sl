(set-logic LIA)
(declare-var i Int)
(declare-var j Int)
(declare-var x Int)
(declare-var y Int)
(declare-var z Int)
(declare-var i! Int)
(declare-var j! Int)
(declare-var x! Int)
(declare-var y! Int)
(declare-var z! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int)(parameter3 Int)(parameter4 Int))Bool) 
(constraint (=> (and (>= i 0) (>= j 0) (= z 0) (= x i) (= y j) )(inv-f i j x y z )))
(constraint (=> (and (inv-f i j x y z ) (and (not (= x 0)) (= i! i) (= j! j) (= x! (- x 1)) (= y! (- y 2)) (= z! (+ z 1 )) ) )(inv-f i! j! x! y! z! )))
(constraint (=> (inv-f i j x y z )(or (not (= x 0)) (=> (= i j)(= y (- 0 z))) )))
(check-synth)

