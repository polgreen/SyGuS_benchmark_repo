(set-logic LIA)
(declare-var x Int)
(declare-var y Int)
(declare-var z1 Int)
(declare-var z2 Int)
(declare-var z3 Int)
(declare-var x! Int)
(declare-var y! Int)
(declare-var z1! Int)
(declare-var z2! Int)
(declare-var z3! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int)(parameter3 Int)(parameter4 Int))Bool) 
(constraint (=> (and (and (>= x 0) (and (<= x 2) (<= y 2) ) ) (>= y 0) )(inv-f x y z1 z2 z3 )))
(constraint (=> (and (inv-f x y z1 z2 z3 ) (and (= x! (+ x 2 )) (= y! (+ y 2 )) ) )(inv-f x! y! z1! z2! z3! )))
(constraint (=> (inv-f x y z1 z2 z3 )(not (and (= x 4) (= y 0) ))))
(check-synth)

