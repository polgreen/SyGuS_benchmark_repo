(set-logic LIA)
(declare-var x Int)
(declare-var n Int)
(declare-var x! Int)
(declare-var n! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int))Bool) 
(constraint (=> (= x n)(inv-f x n )))
(constraint (=> (and (inv-f x n ) (and (and (> x 0) (= x! (- x 1)) ) (= n! n) ) )(inv-f x! n! )))
(constraint (=> (inv-f x n )(not (and (<= x 0) (and (not (= x 0)) (>= n 0) ) ))))
(check-synth)

