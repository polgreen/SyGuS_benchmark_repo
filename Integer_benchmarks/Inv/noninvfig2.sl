(set-logic LIA)
(declare-var x Int)
(declare-var y Int)
(declare-var z Int)
(declare-var w Int)
(declare-var x! Int)
(declare-var y! Int)
(declare-var z! Int)
(declare-var w! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int)(parameter3 Int))Bool) 
(constraint (=> (and (= x 0) (= y 0) (= z 0) (= w 0) )(inv-f x y z w )))
(constraint (=> (and (inv-f x y z w ) (or (and (= x! (+ x 1 )) (= y! (+ y 2 )) (= z! z) (= w! w) ) (and (>= x 4) (= x! (+ x 1 )) (= y! (+ y 3 )) (= z! (+ z 10 )) (= w! (+ w 10 )) ) (and (>= x z) (> w y) (= x! (- 0 x)) (= y! (- 0 y)) (= z! z) (= w! w) ) ) )(inv-f x! y! z! w! )))
(constraint (=> (inv-f x y z w )(>= (* 3 x) y)))
(check-synth)

