(set-logic LIA)
(declare-var x Int)
(declare-var m Int)
(declare-var n Int)
(declare-var x! Int)
(declare-var m! Int)
(declare-var n! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int))Bool) 
(constraint (=> (and (= x 0) (and (= m 0) (> n 0) ) )(inv-f x m n )))
(constraint (=> (and (inv-f x m n ) (or (and (>= x n) (and (= x! x) (and (= m! m) (= n! n) ) ) ) (or (and (< x n) (and (= x! (+ x 1 )) (and (= m! x) (= n! n) ) ) ) (and (< x n) (and (= x! (+ x 1 )) (and (= m! m) (= n! n) ) ) ) ) ) )(inv-f x! m! n! )))
(constraint (=> (inv-f x m n )(=> (>= x n)(or (<= n 0) (and (<= 0 m) (< m n) ) ))))
(check-synth)

