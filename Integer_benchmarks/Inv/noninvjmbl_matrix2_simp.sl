(set-logic LIA)
(declare-var m Int)
(declare-var a Int)
(declare-var j Int)
(declare-var k Int)
(declare-var r Int)
(declare-var c Int)
(declare-var m! Int)
(declare-var a! Int)
(declare-var j! Int)
(declare-var k! Int)
(declare-var r! Int)
(declare-var c! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int)(parameter3 Int)(parameter4 Int)(parameter5 Int))Bool) 
(constraint (=> (and (or (<= a m) (= j 0) ) (and (< j r) (= k 0) ) )(inv-f m a j k r c )))
(constraint (=> (and (inv-f m a j k r c ) (or (and (and (= j! j) (and (= r! r) (= c! c) ) ) (and (< k c) (and (< m a!) (and (= m! a!) (= k! (+ k 1 )) ) ) ) ) (and (= j! j) (and (= r! r) (and (= c! c) (and (< k c) (and (> m a!) (= k! (+ k 1 )) ) ) ) ) ) ) )(inv-f m! a! j! k! r! c! )))
(constraint (=> (inv-f m a j k r c )(or (< k c) (or (<= a m) (= j (- 1)) ) )))
(check-synth)

