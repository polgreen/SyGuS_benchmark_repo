(set-logic LIA)
(declare-var b Int)
(declare-var j Int)
(declare-var n Int)
(declare-var flag Int)
(declare-var b! Int)
(declare-var j! Int)
(declare-var n! Int)
(declare-var flag! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int)(parameter3 Int))Bool) 
(constraint (=> (and (= j 0) (and (> n 0) (= b 0) ) )(inv-f b j n flag )))
(constraint (=> (and (inv-f b j n flag ) (or (and (< b n) (and (= flag 1) (and (= j! (+ j 1 )) (and (= b! (+ b 1 )) (and (= n! n) (= flag! flag) ) ) ) ) ) (or (and (< b n) (and (not (= flag 1)) (and (= j! j) (and (= b! (+ b 1 )) (and (= n! n) (= flag! flag) ) ) ) ) ) (and (>= b n) (and (= j! j) (and (= b! b) (and (= n! n) (= flag! flag) ) ) ) ) ) ) )(inv-f b! j! n! flag! )))
(constraint (=> (inv-f b j n flag )(=> (not (< b n))(or (not (= flag 1)) (= j n) ))))
(check-synth)

