(set-logic LIA)
(declare-var i Int)
(declare-var j Int)
(declare-var x Int)
(declare-var y Int)
(declare-var z1 Int)
(declare-var z2 Int)
(declare-var z3 Int)
(declare-var i! Int)
(declare-var j! Int)
(declare-var x! Int)
(declare-var y! Int)
(declare-var z1! Int)
(declare-var z2! Int)
(declare-var z3! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int)(parameter3 Int)(parameter4 Int)(parameter5 Int)(parameter6 Int))Bool) 
(constraint (=> (and (= i x) (= j y) )(inv-f i j x y z1 z2 z3 )))
(constraint (=> (and (inv-f i j x y z1 z2 z3 ) (and (= i! i) (and (= j! j) (and (not (= x 0)) (and (= x! (- x 1)) (= y! (- y 1)) ) ) ) ) )(inv-f i! j! x! y! z1! z2! z3! )))
(constraint (=> (inv-f i j x y z1 z2 z3 )(or (not (= x 0)) (or (not (= i j)) (= y 0) ) )))
(check-synth)

