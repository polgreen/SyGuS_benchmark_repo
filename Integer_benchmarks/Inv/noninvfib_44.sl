(set-logic LIA)
(declare-var i Int)
(declare-var j Int)
(declare-var n Int)
(declare-var k Int)
(declare-var i! Int)
(declare-var j! Int)
(declare-var n! Int)
(declare-var k! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int)(parameter3 Int))Bool) 
(constraint (=> (and (or (= n 1) (= n 2) ) (and (= i 0) (= j 0) ) )(inv-f i j n k )))
(constraint (=> (and (inv-f i j n k ) (or (and (> i k) (and (= i! i) (and (= j! j) (and (= n! n) (= k! k) ) ) ) ) (and (<= i k) (and (= i! (+ i 1 )) (and (= j! (+ j n )) (and (= n! n) (= k! k) ) ) ) ) ) )(inv-f i! j! n! k! )))
(constraint (=> (inv-f i j n k )(=> (> i k)(or (not (= n 1)) (= i j) ))))
(check-synth)

