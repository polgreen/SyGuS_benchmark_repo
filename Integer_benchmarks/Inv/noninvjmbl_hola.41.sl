(set-logic LIA)
(declare-var i Int)
(declare-var j Int)
(declare-var k Int)
(declare-var n Int)
(declare-var i! Int)
(declare-var j! Int)
(declare-var k! Int)
(declare-var n! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int)(parameter3 Int))Bool) 
(constraint (=> (and (or (= k 1) (>= k 0) ) (and (>= n 0) (and (= i 0) (= j 0) ) ) )(inv-f i j k n )))
(constraint (=> (and (inv-f i j k n ) (and (<= i n) (and (= n! n) (and (= k! k) (and (= i! (+ i 1 )) (= j! (+ j i )) ) ) ) ) )(inv-f i! j! k! n! )))
(constraint (=> (inv-f i j k n )(or (<= i n) (> (+ i (+ j k ) ) (* 2 n)) )))
(check-synth)

