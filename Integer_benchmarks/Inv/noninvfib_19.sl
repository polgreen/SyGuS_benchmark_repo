(set-logic LIA)
(declare-var n Int)
(declare-var m Int)
(declare-var x Int)
(declare-var y Int)
(declare-var n! Int)
(declare-var m! Int)
(declare-var x! Int)
(declare-var y! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int)(parameter3 Int))Bool) 
(constraint (=> (and (>= n 0) (and (>= m 0) (and (< m n) (and (= x 0) (= y m) ) ) ) )(inv-f n m x y )))
(constraint (=> (and (inv-f n m x y ) (or (and (< x n) (and (<= (+ x 1 ) m) (and (= x! (+ x 1 )) (and (= y! y) (and (= n! n) (= m! m) ) ) ) ) ) (or (and (< x n) (and (> (+ x 1 ) m) (and (= x! (+ x 1 )) (and (= y! (+ y 1 )) (and (= n! n) (= m! m) ) ) ) ) ) (and (>= x n) (and (= x! x) (and (= y! y) (and (= n! n) (= m! m) ) ) ) ) ) ) )(inv-f n! m! x! y! )))
(constraint (=> (inv-f n m x y )(=> (not (< x n))(= y n))))
(check-synth)

