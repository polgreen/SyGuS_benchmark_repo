(set-logic LIA)
(declare-var i Int)
(declare-var n Int)
(declare-var a Int)
(declare-var b Int)
(declare-var i! Int)
(declare-var n! Int)
(declare-var a! Int)
(declare-var b! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int)(parameter3 Int))Bool) 
(constraint (=> (and (= i 0) (and (= a 0) (and (= b 0) (>= n 0) ) ) )(inv-f i n a b )))
(constraint (=> (and (inv-f i n a b ) (or (and (< i n) (and (= i! (+ i 1 )) (and (= a! (+ a 1 )) (= b! (+ b 2 )) ) ) ) (or (and (< i n) (and (= i! (+ i 1 )) (and (= a! (+ a 2 )) (= b! (+ b 1 )) ) ) ) (and (>= i n) (and (= i! i) (and (= a! a) (= b! b) ) ) ) ) ) )(inv-f i! n! a! b! )))
(constraint (=> (inv-f i n a b )(=> (not (< i n))(= (+ a b ) (+ (+ n n ) n )))))
(check-synth)

