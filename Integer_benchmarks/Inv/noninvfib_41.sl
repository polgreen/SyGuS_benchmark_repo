(set-logic LIA)
(declare-var n Int)
(declare-var k Int)
(declare-var i Int)
(declare-var j Int)
(declare-var n! Int)
(declare-var k! Int)
(declare-var i! Int)
(declare-var j! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int)(parameter3 Int))Bool) 
(constraint (=> (and (= j 0) (and (>= n 0) (and (= i 0) (or (= k 1) (>= k 0) ) ) ) )(inv-f n k i j )))
(constraint (=> (and (inv-f n k i j ) (or (and (> i n) (and (= n! n) (and (= k! k) (and (= i! i) (= j! j) ) ) ) ) (and (<= i n) (and (= n! n) (and (= k! k) (and (= i! (+ i 1 )) (= j! (+ j 1 )) ) ) ) ) ) )(inv-f n! k! i! j! )))
(constraint (=> (inv-f n k i j )(=> (> i n)(> (+ k (+ i j ) ) (* 2 n)))))
(check-synth)

