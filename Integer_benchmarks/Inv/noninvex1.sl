(set-logic LIA)
(declare-var x Int)
(declare-var y Int)
(declare-var xa Int)
(declare-var ya Int)
(declare-var x! Int)
(declare-var y! Int)
(declare-var xa! Int)
(declare-var ya! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int)(parameter3 Int))Bool) 
(constraint (=> (and (= xa 0) (= ya 0) )(inv-f x y xa ya )))
(constraint (=> (and (inv-f x y xa ya ) (and (= x! (+ 1 (+ xa (* 2 ya) ) )) (or (= y! (+ (- ya (* 2 xa)) x! )) (= y! (- (- ya (* 2 xa)) x!)) ) (= xa! (- x! (* 2 y!))) (= ya! (+ (* 2 x!) y! )) ) )(inv-f x! y! xa! ya! )))
(constraint (=> (inv-f x y xa ya )(>= (+ xa (* 2 ya) ) 0)))
(check-synth)

