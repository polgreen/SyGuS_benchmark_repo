(set-logic LIA)
(declare-var conf_0 Int)
(declare-var conf_0! Int)
(declare-var x Int)
(declare-var x! Int)
(declare-var y Int)
(declare-var y! Int)
(declare-var z Int)
(declare-var z! Int)
(declare-var conf_0_0 Int)
(declare-var conf_0_0! Int)
(declare-var conf_0_1 Int)
(declare-var conf_0_1! Int)
(declare-var conf_0_2 Int)
(declare-var conf_0_2! Int)
(declare-var conf_0_3 Int)
(declare-var conf_0_3! Int)
(declare-var conf_0_4 Int)
(declare-var conf_0_4! Int)
(declare-var x_0 Int)
(declare-var x_0! Int)
(declare-var x_1 Int)
(declare-var x_1! Int)
(declare-var x_2 Int)
(declare-var x_2! Int)
(declare-var x_3 Int)
(declare-var x_3! Int)
(declare-var y_0 Int)
(declare-var y_0! Int)
(declare-var y_1 Int)
(declare-var y_1! Int)
(declare-var y_2 Int)
(declare-var y_2! Int)
(declare-var y_3 Int)
(declare-var y_3! Int)
(declare-var z_0 Int)
(declare-var z_0! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int)(parameter3 Int)(parameter4 Int)(parameter5 Int)(parameter6 Int)(parameter7 Int)(parameter8 Int)(parameter9 Int)(parameter10 Int)(parameter11 Int)(parameter12 Int)(parameter13 Int)(parameter14 Int)(parameter15 Int)(parameter16 Int)(parameter17 Int))Bool) 
(constraint (=> (and (= conf_0 conf_0_0) (= x x_1) (= conf_0_0 9) (= x_1 0) )(inv-f conf_0 x y z conf_0_0 conf_0_1 conf_0_2 conf_0_3 conf_0_4 x_0 x_1 x_2 x_3 y_0 y_1 y_2 y_3 z_0 )))
(constraint (=> (and (inv-f conf_0 x y z conf_0_0 conf_0_1 conf_0_2 conf_0_3 conf_0_4 x_0 x_1 x_2 x_3 y_0 y_1 y_2 y_3 z_0 ) (or (and (= conf_0_1 conf_0) (= x_2 x) (= y_1 y) (= conf_0_1 conf_0!) (= x_2 x!) (= y_1 y!) (= conf_0 conf_0!) (= y y!) (= z z!) ) (and (= conf_0_1 conf_0) (= x_2 x) (= y_1 y) (< x_2 5) (= x_3 (+ x_2 1 )) (= conf_0_2 (+ 115 conf_0_1 )) (<= z_0 y_1) (= y_2 z_0) (= conf_0_3 (- conf_0_2 conf_0_2)) (= conf_0_4 conf_0_3) (= y_3 y_2) (= conf_0_4 conf_0!) (= x_3 x!) (= y_3 y!) (= z z_0) (= z! z_0) ) (and (= conf_0_1 conf_0) (= x_2 x) (= y_1 y) (< x_2 5) (= x_3 (+ x_2 1 )) (= conf_0_2 (+ 115 conf_0_1 )) (not (<= z_0 y_1)) (= conf_0_4 conf_0_2) (= y_3 y_1) (= conf_0_4 conf_0!) (= x_3 x!) (= y_3 y!) (= z z_0) (= z! z_0) ) ) )(inv-f conf_0! x! y! z! conf_0_0! conf_0_1! conf_0_2! conf_0_3! conf_0_4! x_0! x_1! x_2! x_3! y_0! y_1! y_2! y_3! z_0! )))
(constraint (=> (inv-f conf_0 x y z conf_0_0 conf_0_1 conf_0_2 conf_0_3 conf_0_4 x_0 x_1 x_2 x_3 y_0 y_1 y_2 y_3 z_0 )(or (not (and (= conf_0 conf_0_1) (= x x_2) (= y y_1) (= z z_0) )) (not (and (not (< x_2 5)) (not (>= z_0 y_1)) )) )))
(check-synth)

