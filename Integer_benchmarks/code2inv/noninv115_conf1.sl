(set-logic LIA)
(declare-var conf_0 Int)
(declare-var conf_0! Int)
(declare-var sn Int)
(declare-var sn! Int)
(declare-var x Int)
(declare-var x! Int)
(declare-var tmp Int)
(declare-var tmp! Int)
(declare-var conf_0_0 Int)
(declare-var conf_0_0! Int)
(declare-var conf_0_1 Int)
(declare-var conf_0_1! Int)
(declare-var conf_0_2 Int)
(declare-var conf_0_2! Int)
(declare-var conf_0_3 Int)
(declare-var conf_0_3! Int)
(declare-var sn_0 Int)
(declare-var sn_0! Int)
(declare-var sn_1 Int)
(declare-var sn_1! Int)
(declare-var sn_2 Int)
(declare-var sn_2! Int)
(declare-var sn_3 Int)
(declare-var sn_3! Int)
(declare-var x_0 Int)
(declare-var x_0! Int)
(declare-var x_1 Int)
(declare-var x_1! Int)
(declare-var x_2 Int)
(declare-var x_2! Int)
(declare-var x_3 Int)
(declare-var x_3! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int)(parameter3 Int)(parameter4 Int)(parameter5 Int)(parameter6 Int)(parameter7 Int)(parameter8 Int)(parameter9 Int)(parameter10 Int)(parameter11 Int)(parameter12 Int)(parameter13 Int)(parameter14 Int)(parameter15 Int))Bool) 
(constraint (=> (and (= conf_0 conf_0_0) (= sn sn_1) (= x x_1) (= conf_0_0 7) (= sn_1 0) (= x_1 0) )(inv-f conf_0 sn x tmp conf_0_0 conf_0_1 conf_0_2 conf_0_3 sn_0 sn_1 sn_2 sn_3 x_0 x_1 x_2 x_3 )))
(constraint (=> (and (inv-f conf_0 sn x tmp conf_0_0 conf_0_1 conf_0_2 conf_0_3 sn_0 sn_1 sn_2 sn_3 x_0 x_1 x_2 x_3 ) (or (and (= conf_0_1 conf_0) (= sn_2 sn) (= x_2 x) (= conf_0_1 conf_0!) (= sn_2 sn!) (= x_2 x!) (= conf_0 conf_0!) (= sn sn!) (= x x!) (= tmp tmp!) ) (and (= conf_0_1 conf_0) (= sn_2 sn) (= x_2 x) (= x_3 (+ x_2 1 )) (= conf_0_2 conf_0_1) (= sn_3 (+ sn_2 1 )) (= conf_0_3 (+ conf_0_2 conf_0_2 )) (= conf_0_3 conf_0!) (= sn_3 sn!) (= x_3 x!) (= tmp tmp!) ) ) )(inv-f conf_0! sn! x! tmp! conf_0_0! conf_0_1! conf_0_2! conf_0_3! sn_0! sn_1! sn_2! sn_3! x_0! x_1! x_2! x_3! )))
(constraint (=> (inv-f conf_0 sn x tmp conf_0_0 conf_0_1 conf_0_2 conf_0_3 sn_0 sn_1 sn_2 sn_3 x_0 x_1 x_2 x_3 )(or (not (and (= conf_0 conf_0_1) (= sn sn_2) (= x x_2) )) (not (and (not (= sn_2 (- 1))) (not (= sn_2 x_2)) )) )))
(check-synth)

