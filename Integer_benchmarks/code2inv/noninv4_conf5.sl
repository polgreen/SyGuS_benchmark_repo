(set-logic LIA)
(declare-var conf_0 Int)
(declare-var conf_0! Int)
(declare-var conf_1 Int)
(declare-var conf_1! Int)
(declare-var conf_2 Int)
(declare-var conf_2! Int)
(declare-var conf_3 Int)
(declare-var conf_3! Int)
(declare-var conf_4 Int)
(declare-var conf_4! Int)
(declare-var x Int)
(declare-var x! Int)
(declare-var y Int)
(declare-var y! Int)
(declare-var z Int)
(declare-var z! Int)
(declare-var conf_0_0 Int)
(declare-var conf_0_0! Int)
(declare-var conf_1_0 Int)
(declare-var conf_1_0! Int)
(declare-var conf_2_0 Int)
(declare-var conf_2_0! Int)
(declare-var conf_3_0 Int)
(declare-var conf_3_0! Int)
(declare-var conf_3_1 Int)
(declare-var conf_3_1! Int)
(declare-var conf_3_2 Int)
(declare-var conf_3_2! Int)
(declare-var conf_3_3 Int)
(declare-var conf_3_3! Int)
(declare-var conf_3_4 Int)
(declare-var conf_3_4! Int)
(declare-var conf_4_0 Int)
(declare-var conf_4_0! Int)
(declare-var x_0 Int)
(declare-var x_0! Int)
(declare-var x_1 Int)
(declare-var x_1! Int)
(declare-var x_2 Int)
(declare-var x_2! Int)
(declare-var x_3 Int)
(declare-var x_3! Int)
(declare-var y_0 Int)
(declare-var y_0! Int)
(declare-var y_1 Int)
(declare-var y_1! Int)
(declare-var y_2 Int)
(declare-var y_2! Int)
(declare-var y_3 Int)
(declare-var y_3! Int)
(declare-var z_0 Int)
(declare-var z_0! Int)
(synth-fun inv-f((parameter0 Int)(parameter1 Int)(parameter2 Int)(parameter3 Int)(parameter4 Int)(parameter5 Int)(parameter6 Int)(parameter7 Int)(parameter8 Int)(parameter9 Int)(parameter10 Int)(parameter11 Int)(parameter12 Int)(parameter13 Int)(parameter14 Int)(parameter15 Int)(parameter16 Int)(parameter17 Int)(parameter18 Int)(parameter19 Int)(parameter20 Int)(parameter21 Int)(parameter22 Int)(parameter23 Int)(parameter24 Int)(parameter25 Int))Bool) 
(constraint (=> (and (= conf_0 conf_0_0) (= conf_1 conf_1_0) (= conf_2 conf_2_0) (= conf_3 conf_3_0) (= conf_4 conf_4_0) (= x x_1) (= conf_0_0 1) (= conf_1_0 9) (= conf_2_0 0) (= conf_3_0 3) (= conf_4_0 8) (= x_1 0) )(inv-f conf_0 conf_1 conf_2 conf_3 conf_4 x y z conf_0_0 conf_1_0 conf_2_0 conf_3_0 conf_3_1 conf_3_2 conf_3_3 conf_3_4 conf_4_0 x_0 x_1 x_2 x_3 y_0 y_1 y_2 y_3 z_0 )))
(constraint (=> (and (inv-f conf_0 conf_1 conf_2 conf_3 conf_4 x y z conf_0_0 conf_1_0 conf_2_0 conf_3_0 conf_3_1 conf_3_2 conf_3_3 conf_3_4 conf_4_0 x_0 x_1 x_2 x_3 y_0 y_1 y_2 y_3 z_0 ) (or (and (= conf_3_1 conf_3) (= x_2 x) (= y_1 y) (= conf_3_1 conf_3!) (= x_2 x!) (= y_1 y!) (= conf_0 conf_0!) (= conf_1 conf_1!) (= conf_2 conf_2!) (= conf_3 conf_3!) (= conf_4 conf_4!) (= y y!) (= z z!) ) (and (= conf_3_1 conf_3) (= x_2 x) (= y_1 y) (< x_2 500) (= x_3 (+ x_2 1 )) (= conf_3_2 159) (<= z_0 y_1) (= y_2 z_0) (= conf_3_3 (+ conf_1_0 conf_3_2 )) (= conf_3_4 conf_3_3) (= y_3 y_2) (= conf_3_4 conf_3!) (= x_3 x!) (= y_3 y!) (= conf_0 conf_0_0) (= conf_0! conf_0_0) (= conf_1 conf_1_0) (= conf_1! conf_1_0) (= conf_2 conf_2_0) (= conf_2! conf_2_0) (= conf_4 conf_4_0) (= conf_4! conf_4_0) (= z z_0) (= z! z_0) ) (and (= conf_3_1 conf_3) (= x_2 x) (= y_1 y) (< x_2 500) (= x_3 (+ x_2 1 )) (= conf_3_2 159) (not (<= z_0 y_1)) (= conf_3_4 conf_3_2) (= y_3 y_1) (= conf_3_4 conf_3!) (= x_3 x!) (= y_3 y!) (= conf_0 conf_0_0) (= conf_0! conf_0_0) (= conf_1 conf_1_0) (= conf_1! conf_1_0) (= conf_2 conf_2_0) (= conf_2! conf_2_0) (= conf_4 conf_4_0) (= conf_4! conf_4_0) (= z z_0) (= z! z_0) ) ) )(inv-f conf_0! conf_1! conf_2! conf_3! conf_4! x! y! z! conf_0_0! conf_1_0! conf_2_0! conf_3_0! conf_3_1! conf_3_2! conf_3_3! conf_3_4! conf_4_0! x_0! x_1! x_2! x_3! y_0! y_1! y_2! y_3! z_0! )))
(constraint (=> (inv-f conf_0 conf_1 conf_2 conf_3 conf_4 x y z conf_0_0 conf_1_0 conf_2_0 conf_3_0 conf_3_1 conf_3_2 conf_3_3 conf_3_4 conf_4_0 x_0 x_1 x_2 x_3 y_0 y_1 y_2 y_3 z_0 )(or (not (and (= conf_0 conf_0_0) (= conf_1 conf_1_0) (= conf_2 conf_2_0) (= conf_3 conf_3_1) (= conf_4 conf_4_0) (= x x_2) (= y y_1) (= z z_0) )) (not (and (not (< x_2 500)) (not (>= z_0 y_1)) )) )))
(check-synth)

