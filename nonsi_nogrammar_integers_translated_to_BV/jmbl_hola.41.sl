(set-logic ALL)
(declare-var i (BitVec 32))
(declare-var j (BitVec 32))
(declare-var k (BitVec 32))
(declare-var n (BitVec 32))
(declare-var i! (BitVec 32))
(declare-var j! (BitVec 32))
(declare-var k! (BitVec 32))
(declare-var n! (BitVec 32))
(synth-fun inv-f((parameter0 (BitVec 32))(parameter1 (BitVec 32))(parameter2 (BitVec 32))(parameter3 (BitVec 32)))Bool) 
(constraint (=> (and (or (= k (_ bv1 32)) (bvuge k (_ bv0 32)) ) (and (bvuge n (_ bv0 32)) (and (= i (_ bv0 32)) (= j (_ bv0 32)) ) ) )(inv-f i j k n )))
(constraint (=> (and (inv-f i j k n ) (and (bvule i n) (and (= n! n) (and (= k! k) (and (= i! (bvadd i (_ bv1 32))) (= j! (bvadd j i)) ) ) ) ) )(inv-f i! j! k! n! )))
(constraint (=> (inv-f i j k n )(or (bvule i n) (bvugt (bvadd i (bvadd j k)) (bvmul (_ bv2 32) n)) )))
(check-synth)

