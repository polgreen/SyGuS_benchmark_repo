(set-logic ALL)
(declare-var i (BitVec 32))
(declare-var sum (BitVec 32))
(declare-var n (BitVec 32))
(declare-var i! (BitVec 32))
(declare-var sum! (BitVec 32))
(declare-var n! (BitVec 32))
(synth-fun inv-f((parameter0 (BitVec 32))(parameter1 (BitVec 32))(parameter2 (BitVec 32)))Bool) 
(constraint (=> (and (= sum (_ bv0 32)) (and (bvuge n (_ bv0 32)) (= i (_ bv0 32)) ) )(inv-f i sum n )))
(constraint (=> (and (inv-f i sum n ) (or (and (bvult i n) (and (= i! (bvadd i (_ bv1 32))) (and (= sum! (bvadd sum i)) (= n! n) ) ) ) (and (bvuge i n) (and (= i! i) (and (= sum! sum) (= n! n) ) ) ) ) )(inv-f i! sum! n! )))
(constraint (=> (inv-f i sum n )(=> (bvuge i n)(bvuge sum (_ bv0 32)))))
(check-synth)

