(set-logic ALL)
(declare-var x (BitVec 32))
(declare-var y (BitVec 32))
(declare-var xa (BitVec 32))
(declare-var ya (BitVec 32))
(declare-var x! (BitVec 32))
(declare-var y! (BitVec 32))
(declare-var xa! (BitVec 32))
(declare-var ya! (BitVec 32))
(synth-fun inv-f((parameter0 (BitVec 32))(parameter1 (BitVec 32))(parameter2 (BitVec 32))(parameter3 (BitVec 32)))Bool) 
(constraint (=> (and (= xa (_ bv0 32)) (= ya (_ bv0 32)) )(inv-f x y xa ya )))
(constraint (=> (and (inv-f x y xa ya ) (and (and (and (= x! (bvadd (_ bv1 32) (bvadd xa (bvmul (_ bv2 32) ya)))) (or (= y! (bvadd (bvsub ya (bvmul (_ bv2 32) xa)) x!)) (= y! (bvsub (bvsub ya (bvmul (_ bv2 32) xa)) x!)) ) ) (= xa! (bvsub x! (bvmul (_ bv2 32) y!))) ) (= ya! (bvadd (bvmul (_ bv2 32) x!) y!)) ) )(inv-f x! y! xa! ya! )))
(constraint (=> (inv-f x y xa ya )(bvuge (bvadd xa (bvmul (_ bv2 32) ya)) (_ bv0 32))))
(check-synth)

