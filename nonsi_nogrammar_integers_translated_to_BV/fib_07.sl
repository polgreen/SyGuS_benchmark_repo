(set-logic ALL)
(declare-var i (_ BitVec 32))
(declare-var n (_ BitVec 32))
(declare-var a (_ BitVec 32))
(declare-var b (_ BitVec 32))
(declare-var i! (_ BitVec 32))
(declare-var n! (_ BitVec 32))
(declare-var a! (_ BitVec 32))
(declare-var b! (_ BitVec 32))
(synth-fun inv-f((parameter0 (_ BitVec 32))(parameter1 (_ BitVec 32))(parameter2 (_ BitVec 32))(parameter3 (_ BitVec 32)))Bool) 
(constraint (=> (and (= i (_ bv0 32)) (and (= a (_ bv0 32)) (and (= b (_ bv0 32)) (bvuge n (_ bv0 32)) ) ) )(inv-f i n a b )))
(constraint (=> (and (inv-f i n a b ) (or (and (bvult i n) (and (= i! (bvadd i (_ bv1 32))) (and (= a! (bvadd a (_ bv1 32))) (= b! (bvadd b (_ bv2 32))) ) ) ) (or (and (bvult i n) (and (= i! (bvadd i (_ bv1 32))) (and (= a! (bvadd a (_ bv2 32))) (= b! (bvadd b (_ bv1 32))) ) ) ) (and (bvuge i n) (and (= i! i) (and (= a! a) (= b! b) ) ) ) ) ) )(inv-f i! n! a! b! )))
(constraint (=> (inv-f i n a b )(=> (not (bvult i n))(= (bvadd a b) (bvadd (bvadd n n) n)))))
(check-synth)

