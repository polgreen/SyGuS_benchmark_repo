(set-logic ALL)
(declare-var w (BitVec 32))
(declare-var x (BitVec 32))
(declare-var y (BitVec 32))
(declare-var z (BitVec 32))
(declare-var w! (BitVec 32))
(declare-var x! (BitVec 32))
(declare-var y! (BitVec 32))
(declare-var z! (BitVec 32))
(synth-fun inv-f((parameter0 (BitVec 32))(parameter1 (BitVec 32))(parameter2 (BitVec 32))(parameter3 (BitVec 32)))Bool) 
(constraint (=> (and (and (and (= w (_ bv0 32)) (= x (_ bv0 32)) ) (= y (_ bv0 32)) ) (= z (_ bv0 32)) )(inv-f w x y z )))
(constraint (=> (and (inv-f w x y z ) (and (and (or (or (and (= x! (bvadd x (_ bv1 32))) (= y! (bvadd y (_ bv100 32))) ) (and (and (bvuge x (_ bv4 32)) (= x! (bvadd x (_ bv1 32))) ) (= y! (bvadd y (_ bv1 32))) ) ) (and (and (and (bvugt y (bvmul (_ bv10 32) w)) (bvuge z (bvmul (_ bv100 32) x)) ) (= y! (bvsub (_ bv0 32) y)) ) (= x! x) ) ) (= w! (bvadd w (_ bv1 32))) ) (= z! (bvadd z (_ bv10 32))) ) )(inv-f w! x! y! z! )))
(constraint (=> (inv-f w x y z )(not (and (bvuge x (_ bv4 32)) (bvule y (_ bv2 32)) ))))
(check-synth)

