(set-logic ALL)
(declare-var conf_0 (BitVec 32))
(declare-var conf_0! (BitVec 32))
(declare-var n (BitVec 32))
(declare-var n! (BitVec 32))
(declare-var x (BitVec 32))
(declare-var x! (BitVec 32))
(declare-var y (BitVec 32))
(declare-var y! (BitVec 32))
(declare-var conf_0_0 (BitVec 32))
(declare-var conf_0_0! (BitVec 32))
(declare-var conf_0_1 (BitVec 32))
(declare-var conf_0_1! (BitVec 32))
(declare-var conf_0_2 (BitVec 32))
(declare-var conf_0_2! (BitVec 32))
(declare-var conf_0_3 (BitVec 32))
(declare-var conf_0_3! (BitVec 32))
(declare-var n_0 (BitVec 32))
(declare-var n_0! (BitVec 32))
(declare-var x_0 (BitVec 32))
(declare-var x_0! (BitVec 32))
(declare-var x_1 (BitVec 32))
(declare-var x_1! (BitVec 32))
(declare-var x_2 (BitVec 32))
(declare-var x_2! (BitVec 32))
(declare-var x_3 (BitVec 32))
(declare-var x_3! (BitVec 32))
(declare-var y_0 (BitVec 32))
(declare-var y_0! (BitVec 32))
(declare-var y_1 (BitVec 32))
(declare-var y_1! (BitVec 32))
(declare-var y_2 (BitVec 32))
(declare-var y_2! (BitVec 32))
(synth-fun inv-f((parameter0 (BitVec 32))(parameter1 (BitVec 32))(parameter2 (BitVec 32))(parameter3 (BitVec 32))(parameter4 (BitVec 32))(parameter5 (BitVec 32))(parameter6 (BitVec 32))(parameter7 (BitVec 32))(parameter8 (BitVec 32))(parameter9 (BitVec 32))(parameter10 (BitVec 32))(parameter11 (BitVec 32))(parameter12 (BitVec 32))(parameter13 (BitVec 32))(parameter14 (BitVec 32))(parameter15 (BitVec 32)))Bool) 
(constraint (=> (and (and (and (= conf_0 conf_0_0) (= x x_1) ) (= conf_0_0 (_ bv8 32)) ) (= x_1 (_ bv1 32)) )(inv-f conf_0 n x y conf_0_0 conf_0_1 conf_0_2 conf_0_3 n_0 x_0 x_1 x_2 x_3 y_0 y_1 y_2 )))
(constraint (=> (and (inv-f conf_0 n x y conf_0_0 conf_0_1 conf_0_2 conf_0_3 n_0 x_0 x_1 x_2 x_3 y_0 y_1 y_2 ) (or (and (and (and (and (and (and (and (and (and (= conf_0_1 conf_0) (= x_2 x) ) (= y_1 y) ) (= conf_0_1 conf_0!) ) (= x_2 x!) ) (= y_1 y!) ) (= n n_0) ) (= n! n_0) ) (= conf_0 conf_0!) ) (= y y!) ) (and (and (and (and (and (and (and (and (and (and (and (and (= conf_0_1 conf_0) (= x_2 x) ) (= y_1 y) ) (bvule x_2 n_0) ) (= y_2 (bvsub n_0 x_2)) ) (= conf_0_2 conf_0_1) ) (= x_3 (bvadd x_2 (_ bv1 32))) ) (= conf_0_3 (bvadd conf_0_2 (_ bv292 32))) ) (= conf_0_3 conf_0!) ) (= x_3 x!) ) (= y_2 y!) ) (= n n_0) ) (= n! n_0) ) ) )(inv-f conf_0! n! x! y! conf_0_0! conf_0_1! conf_0_2! conf_0_3! n_0! x_0! x_1! x_2! x_3! y_0! y_1! y_2! )))
(constraint (=> (inv-f conf_0 n x y conf_0_0 conf_0_1 conf_0_2 conf_0_3 n_0 x_0 x_1 x_2 x_3 y_0 y_1 y_2 )(or (not (and (and (and (= conf_0 conf_0_1) (= n n_0) ) (= x x_2) ) (= y y_1) )) (not (and (and (not (bvule x_2 n_0)) (bvugt n_0 (_ bv0 32)) ) (not (bvult y_1 n_0)) )) )))
(check-synth)

