(set-logic ALL)
(declare-var a (BitVec 32))
(declare-var a! (BitVec 32))
(declare-var j (BitVec 32))
(declare-var j! (BitVec 32))
(declare-var conf_0 (BitVec 32))
(declare-var conf_0! (BitVec 32))
(declare-var k (BitVec 32))
(declare-var k! (BitVec 32))
(declare-var m (BitVec 32))
(declare-var m! (BitVec 32))
(declare-var a_0 (BitVec 32))
(declare-var a_0! (BitVec 32))
(declare-var j_0 (BitVec 32))
(declare-var j_0! (BitVec 32))
(declare-var j_1 (BitVec 32))
(declare-var j_1! (BitVec 32))
(declare-var conf_0_0 (BitVec 32))
(declare-var conf_0_0! (BitVec 32))
(declare-var conf_0_1 (BitVec 32))
(declare-var conf_0_1! (BitVec 32))
(declare-var conf_0_2 (BitVec 32))
(declare-var conf_0_2! (BitVec 32))
(declare-var conf_0_3 (BitVec 32))
(declare-var conf_0_3! (BitVec 32))
(declare-var conf_0_4 (BitVec 32))
(declare-var conf_0_4! (BitVec 32))
(declare-var k_0 (BitVec 32))
(declare-var k_0! (BitVec 32))
(declare-var k_1 (BitVec 32))
(declare-var k_1! (BitVec 32))
(declare-var k_2 (BitVec 32))
(declare-var k_2! (BitVec 32))
(declare-var k_3 (BitVec 32))
(declare-var k_3! (BitVec 32))
(declare-var m_0 (BitVec 32))
(declare-var m_0! (BitVec 32))
(declare-var m_1 (BitVec 32))
(declare-var m_1! (BitVec 32))
(declare-var m_2 (BitVec 32))
(declare-var m_2! (BitVec 32))
(declare-var m_3 (BitVec 32))
(declare-var m_3! (BitVec 32))
(synth-fun inv-f((parameter0 (BitVec 32))(parameter1 (BitVec 32))(parameter2 (BitVec 32))(parameter3 (BitVec 32))(parameter4 (BitVec 32))(parameter5 (BitVec 32))(parameter6 (BitVec 32))(parameter7 (BitVec 32))(parameter8 (BitVec 32))(parameter9 (BitVec 32))(parameter10 (BitVec 32))(parameter11 (BitVec 32))(parameter12 (BitVec 32))(parameter13 (BitVec 32))(parameter14 (BitVec 32))(parameter15 (BitVec 32))(parameter16 (BitVec 32))(parameter17 (BitVec 32))(parameter18 (BitVec 32))(parameter19 (BitVec 32))(parameter20 (BitVec 32)))Bool) 
(constraint (=> (and (and (and (and (and (= j j_1) (= conf_0 conf_0_0) ) (= k k_1) ) (= conf_0_0 (_ bv4 32)) ) (= j_1 (_ bv0 32)) ) (= k_1 (_ bv0 32)) )(inv-f a j conf_0 k m a_0 j_0 j_1 conf_0_0 conf_0_1 conf_0_2 conf_0_3 conf_0_4 k_0 k_1 k_2 k_3 m_0 m_1 m_2 m_3 )))
(constraint (=> (and (inv-f a j conf_0 k m a_0 j_0 j_1 conf_0_0 conf_0_1 conf_0_2 conf_0_3 conf_0_4 k_0 k_1 k_2 k_3 m_0 m_1 m_2 m_3 ) (or (or (and (and (and (and (and (and (and (and (and (= conf_0_1 conf_0) (= k_2 k) ) (= m_1 m) ) (= conf_0_1 conf_0!) ) (= k_2 k!) ) (= m_1 m!) ) (= a a!) ) (= j j!) ) (= conf_0 conf_0!) ) (= m m!) ) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= conf_0_1 conf_0) (= k_2 k) ) (= m_1 m) ) (bvult k_2 (_ bv1 32)) ) (bvult m_1 a_0) ) (= m_2 a_0) ) (= conf_0_2 conf_0_1) ) (= conf_0_3 conf_0_2) ) (= m_3 m_2) ) (= k_3 (bvadd k_2 (_ bv1 32))) ) (= conf_0_4 (_ bv453 32)) ) (= conf_0_4 conf_0!) ) (= k_3 k!) ) (= m_3 m!) ) (= a a_0) ) (= a! a_0) ) (= j j_1) ) (= j! j_1) ) ) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= conf_0_1 conf_0) (= k_2 k) ) (= m_1 m) ) (bvult k_2 (_ bv1 32)) ) (not (bvult m_1 a_0)) ) (= conf_0_3 conf_0_1) ) (= m_3 m_1) ) (= k_3 (bvadd k_2 (_ bv1 32))) ) (= conf_0_4 (_ bv453 32)) ) (= conf_0_4 conf_0!) ) (= k_3 k!) ) (= m_3 m!) ) (= a a_0) ) (= a! a_0) ) (= j j_1) ) (= j! j_1) ) ) )(inv-f a! j! conf_0! k! m! a_0! j_0! j_1! conf_0_0! conf_0_1! conf_0_2! conf_0_3! conf_0_4! k_0! k_1! k_2! k_3! m_0! m_1! m_2! m_3! )))
(constraint (=> (inv-f a j conf_0 k m a_0 j_0 j_1 conf_0_0 conf_0_1 conf_0_2 conf_0_3 conf_0_4 k_0 k_1 k_2 k_3 m_0 m_1 m_2 m_3 )(or (not (and (and (and (and (= a a_0) (= j j_1) ) (= conf_0 conf_0_1) ) (= k k_2) ) (= m m_1) )) (not (and (not (bvult k_2 (_ bv1 32))) (not (bvule a_0 m_1)) )) )))
(check-synth)

