(set-logic ALL)
(declare-var c (BitVec 32))
(declare-var c! (BitVec 32))
(declare-var conf_0 (BitVec 32))
(declare-var conf_0! (BitVec 32))
(declare-var y (BitVec 32))
(declare-var y! (BitVec 32))
(declare-var z (BitVec 32))
(declare-var z! (BitVec 32))
(declare-var tmp (BitVec 32))
(declare-var tmp! (BitVec 32))
(declare-var c_0 (BitVec 32))
(declare-var c_0! (BitVec 32))
(declare-var c_1 (BitVec 32))
(declare-var c_1! (BitVec 32))
(declare-var c_2 (BitVec 32))
(declare-var c_2! (BitVec 32))
(declare-var c_3 (BitVec 32))
(declare-var c_3! (BitVec 32))
(declare-var c_4 (BitVec 32))
(declare-var c_4! (BitVec 32))
(declare-var conf_0_0 (BitVec 32))
(declare-var conf_0_0! (BitVec 32))
(declare-var conf_0_1 (BitVec 32))
(declare-var conf_0_1! (BitVec 32))
(declare-var conf_0_2 (BitVec 32))
(declare-var conf_0_2! (BitVec 32))
(declare-var conf_0_3 (BitVec 32))
(declare-var conf_0_3! (BitVec 32))
(declare-var conf_0_4 (BitVec 32))
(declare-var conf_0_4! (BitVec 32))
(declare-var y_0 (BitVec 32))
(declare-var y_0! (BitVec 32))
(declare-var z_0 (BitVec 32))
(declare-var z_0! (BitVec 32))
(declare-var z_1 (BitVec 32))
(declare-var z_1! (BitVec 32))
(declare-var z_2 (BitVec 32))
(declare-var z_2! (BitVec 32))
(declare-var z_3 (BitVec 32))
(declare-var z_3! (BitVec 32))
(declare-var z_4 (BitVec 32))
(declare-var z_4! (BitVec 32))
(synth-fun inv-f((parameter0 (BitVec 32))(parameter1 (BitVec 32))(parameter2 (BitVec 32))(parameter3 (BitVec 32))(parameter4 (BitVec 32))(parameter5 (BitVec 32))(parameter6 (BitVec 32))(parameter7 (BitVec 32))(parameter8 (BitVec 32))(parameter9 (BitVec 32))(parameter10 (BitVec 32))(parameter11 (BitVec 32))(parameter12 (BitVec 32))(parameter13 (BitVec 32))(parameter14 (BitVec 32))(parameter15 (BitVec 32))(parameter16 (BitVec 32))(parameter17 (BitVec 32))(parameter18 (BitVec 32))(parameter19 (BitVec 32))(parameter20 (BitVec 32)))Bool) 
(constraint (=> (and (and (and (and (and (and (and (and (= c c_1) (= conf_0 conf_0_0) ) (= y y_0) ) (= z z_1) ) (= conf_0_0 (_ bv3 32)) ) (= c_1 (_ bv0 32)) ) (bvuge y_0 (_ bv0 32)) ) (bvuge y_0 (_ bv127 32)) ) (= z_1 (bvmul (_ bv36 32) y_0)) )(inv-f c conf_0 y z tmp c_0 c_1 c_2 c_3 c_4 conf_0_0 conf_0_1 conf_0_2 conf_0_3 conf_0_4 y_0 z_0 z_1 z_2 z_3 z_4 )))
(constraint (=> (and (inv-f c conf_0 y z tmp c_0 c_1 c_2 c_3 c_4 conf_0_0 conf_0_1 conf_0_2 conf_0_3 conf_0_4 y_0 z_0 z_1 z_2 z_3 z_4 ) (or (or (and (and (and (and (and (and (and (and (and (and (= c_2 c) (= conf_0_1 conf_0) ) (= z_2 z) ) (= c_2 c!) ) (= conf_0_1 conf_0!) ) (= z_2 z!) ) (= c c!) ) (= conf_0 conf_0!) ) (= y y!) ) (= z z!) ) (= tmp tmp!) ) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= c_2 c) (= conf_0_1 conf_0) ) (= z_2 z) ) (bvult c_2 (_ bv36 32)) ) (= z_3 (bvadd z_2 (_ bv1 32))) ) (= conf_0_2 conf_0_1) ) (= c_3 (bvadd c_2 (_ bv1 32))) ) (= conf_0_3 (bvadd conf_0_2 (_ bv512 32))) ) (= c_4 c_3) ) (= conf_0_4 conf_0_3) ) (= z_4 z_3) ) (= c_4 c!) ) (= conf_0_4 conf_0!) ) (= z_4 z!) ) (= y y_0) ) (= y! y_0) ) (= tmp tmp!) ) ) (and (and (and (and (and (and (and (and (and (and (and (and (= c_2 c) (= conf_0_1 conf_0) ) (= z_2 z) ) (not (bvult c_2 (_ bv36 32))) ) (= c_4 c_2) ) (= conf_0_4 conf_0_1) ) (= z_4 z_2) ) (= c_4 c!) ) (= conf_0_4 conf_0!) ) (= z_4 z!) ) (= y y_0) ) (= y! y_0) ) (= tmp tmp!) ) ) )(inv-f c! conf_0! y! z! tmp! c_0! c_1! c_2! c_3! c_4! conf_0_0! conf_0_1! conf_0_2! conf_0_3! conf_0_4! y_0! z_0! z_1! z_2! z_3! z_4! )))
(constraint (=> (inv-f c conf_0 y z tmp c_0 c_1 c_2 c_3 c_4 conf_0_0 conf_0_1 conf_0_2 conf_0_3 conf_0_4 y_0 z_0 z_1 z_2 z_3 z_4 )(or (not (and (and (and (= c c_2) (= conf_0 conf_0_1) ) (= y y_0) ) (= z z_2) )) (not (and (and (bvult z_2 (_ bv0 32)) (bvuge z_2 (_ bv4608 32)) ) (not (bvuge c_2 (_ bv36 32))) )) )))
(check-synth)

