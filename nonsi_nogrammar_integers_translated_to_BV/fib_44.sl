(set-logic ALL)
(declare-var i (BitVec 32))
(declare-var j (BitVec 32))
(declare-var n (BitVec 32))
(declare-var k (BitVec 32))
(declare-var i! (BitVec 32))
(declare-var j! (BitVec 32))
(declare-var n! (BitVec 32))
(declare-var k! (BitVec 32))
(synth-fun inv-f((parameter0 (BitVec 32))(parameter1 (BitVec 32))(parameter2 (BitVec 32))(parameter3 (BitVec 32)))Bool) 
(constraint (=> (and (or (= n (_ bv1 32)) (= n (_ bv2 32)) ) (and (= i (_ bv0 32)) (= j (_ bv0 32)) ) )(inv-f i j n k )))
(constraint (=> (and (inv-f i j n k ) (or (and (bvugt i k) (and (= i! i) (and (= j! j) (and (= n! n) (= k! k) ) ) ) ) (and (bvule i k) (and (= i! (bvadd i (_ bv1 32))) (and (= j! (bvadd j n)) (and (= n! n) (= k! k) ) ) ) ) ) )(inv-f i! j! n! k! )))
(constraint (=> (inv-f i j n k )(=> (bvugt i k)(or (not (= n (_ bv1 32))) (= i j) ))))
(check-synth)

