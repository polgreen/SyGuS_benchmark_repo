(set-logic ALL)
(declare-var x (BitVec 32))
(declare-var n (BitVec 32))
(declare-var v1 (BitVec 32))
(declare-var v2 (BitVec 32))
(declare-var v3 (BitVec 32))
(declare-var x! (BitVec 32))
(declare-var n! (BitVec 32))
(declare-var v1! (BitVec 32))
(declare-var v2! (BitVec 32))
(declare-var v3! (BitVec 32))
(synth-fun inv-f((parameter0 (BitVec 32))(parameter1 (BitVec 32))(parameter2 (BitVec 32))(parameter3 (BitVec 32))(parameter4 (BitVec 32)))Bool) 
(constraint (=> (= x n)(inv-f x n v1 v2 v3 )))
(constraint (=> (and (inv-f x n v1 v2 v3 ) (and (and (bvugt x (_ bv0 32)) (= x! (bvsub x (_ bv1 32))) ) (= n! n) ) )(inv-f x! n! v1! v2! v3! )))
(constraint (=> (inv-f x n v1 v2 v3 )(not (and (bvule x (_ bv0 32)) (and (not (= x (_ bv0 32))) (bvuge n (_ bv0 32)) ) ))))
(check-synth)

